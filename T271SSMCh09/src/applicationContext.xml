<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 启用注解方式的配置,自动扫描带有注解的类，加入Spring容器 -->
	<context:component-scan base-package="com.t271" />
	<!--1、配置数据源-->
	<!--读取属性文件-->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- JNDI获取数据源(使用dbcp连接池) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<!-- sql 心跳,定时检测连接是否有效，如果数据库岩机，恢复数据库服务后，程序可以自动建立连接，不需要重启应用程序 -->
		<property name= "testWhileIdle" value="true"/>
		<property name= "testOnBorrow" value="false"/>
		<property name= "testOnReturn" value="false"/>
		<property name= "validationQuery" value="select 1"/>
		<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
		<property name= "numTestsPerEvictionRun" value="${maxActive}"/>
	</bean>

	<!--2、配置SqlSessionFactoryBean-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源组件 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 引用MyBatis配置文件中的配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 配置SQL映射文件信息 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/t271/mapper/*.xml</value>
			</list>
		</property>
	</bean>
	<!--3、配置MapperScannerConfigurer，自动给某个包下的接口，生成实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.t271.mapper" />
	</bean>

	<!--4、配置声明式事务-->
	<!-- 1、定义事务管理器 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 启用注解方式配置的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 2、定义事务开启规则和事务传播机制 -->
	 <!--<tx:advice id="txAdvice">
		<tx:attributes>
			&lt;!&ndash;propagation:事务传播机制&ndash;&gt;
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"  />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="add*" propagation="REQUIRED" no-rollback-for="NullPointerException" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>-->
	<!-- 3、定义切面,业务逻辑层service -->
	<!--<aop:config>
        <aop:pointcut id="serviceMethod" expression="execution(* com.t271.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
    </aop:config>-->
</beans>